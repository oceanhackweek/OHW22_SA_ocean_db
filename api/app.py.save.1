
from fastapi import FastAPI, Request
from fastapi.middleware.cors import CORSMiddleware
from fastapi.responses import JSONResponse
import pandas as pd
import json
from typing import Union
from dotenv import load_dotenv
import sqlalchemy

def make_db_connection():
	# reading credentials
	load_dotenv()

	PASS = os.getenv('POSTGRE_PWD')
	URL = os.getenv('POSTGRE_LOCAL')

	# creating an engine with sqlalchemy
	engine = sqlalchemy.create_engine(f"postgresql+psycopg2://{os.getenv('POSTGRE_USER')}:{quote(PASS)}@{URL}/{os.getenv('POSTGRE_BD')}")
	# returning the objects
	return engine

app = FastAPI()

#this is use to allow to access the api from a webapp
app.add_middleware(
	CORSMiddleware,
	allow_origins=["*"], # Allows all origins
	allow_credentials=True,
	allow_methods=["*"], # Allows all methods
	allow_headers=["*"], # Allows all headers
	)

@app.get("/")
def index():
	return {"greeting": "Hello world"}

@app.get("/buoy/{buoy_id}/")
def read_buoy(buoy_id: int, var: Union[str, None] = None): #, start_date: [date, None] = None, final_date: [date, None] = None):
	# SELECT wvdir,datetime FROM ohw_satlantic.pnboia_buoy WHERE pnboia_id=27 AND
	# datetime >= '2022-01-01' AND datetime <= '2022-08-15'

	# SELECT var,datetime FROM ohw_satlantic.pnboia_buoy WHERE pnboia_id=buoyid AND
	# datetime >= incial_date AND datetime <= final_date
	id_dict = {20: 'abrolhos', 27: 'alcatrazes', 28: 'noronha', 29: 'imbituba'}
	df = pd.read_csv('data/%s.csv' %id_dict[buoy_id])
	if var == None:
		v = df.to_json(orient="records")
	else:
		v = df[var].to_json(orient="records")
	return {v}

@app.get("/buoy_db/{buoy_id}/")
def read_buoy(buoy_id: int, var: Union[str, None] = None): #, start_date: [date, None] = None, final_date: [date, None] = None):

	engine = make_db_connection()

	# SELECT wvdir,datetime FROM ohw_satlantic.pnboia_buoy WHERE pnboia_id=27 AND
        # datetime >= '2022-01-01' AND datetime <= '2022-08-15'

        # SELECT var,datetime FROM ohw_satlantic.pnboia_buoy WHERE pnboia_id=buoyid AND
        # datetime >= incial_date AND datetime <= final_date

	query = f''' SELECT wvdir,datetime FROM ohw_satlantic.pnboia_buoy WHERE pnboia_id={buoy_id} AND datetime >= '2022-01-01' AND datetime <= '2022-08-15' '''
	df = pd.read_sql_query(query, con=engine)
	v = df.to_json(orient="records")
        return {v}
